# Global environment variables for builds.
env:
  - CGO_ENABLED=0
  - GO111MODULE=on
  - GOPROXY=https://goproxy.io|direct
  - REPO=github.com/flomesh-io/traffic-guru

# Hooks to run before any build is run.
before:
  hooks:
    - go version | grep --quiet "go1\.17" || echo "Go binary version must be 1.17"
    - go mod download

# Binary builds.
builds:
  # flomesh build steps
  - id: flomesh
    main: ./cli
    binary: flomesh
    mod_timestamp: "{{ .CommitTimestamp }}"
    asmflags: &build-asmflags
      - all=-trimpath={{ .Env.PWD }}
    gcflags: &build-gcflags
      - all=-trimpath={{ .Env.PWD }}
    ldflags: &build-ldflags
      - -X {{ .Env.REPO }}/pkg/version.Version={{ .Env.SIMPLE_VERSION }}
      - -X {{ .Env.REPO }}/pkg/version.GitVersion={{ .Env.GIT_VERSION }}
      - -X {{ .Env.REPO }}/pkg/version.GitCommit={{ .Env.GIT_COMMIT }}
      - -X {{ .Env.REPO }}/pkg/version.KubernetesVersion={{ .Env.K8S_VERSION }}
      - -X {{ .Env.REPO }}/pkg/version.ImageVersion={{ .Env.IMAGE_VERSION }}
      - -X {{ .Env.REPO }}/pkg/version.BuildDate={{ .Env.BUILD_DATE }}
    goos:
      - darwin
#      - freebsd
#      - windows
      - linux
    goarch:
      - amd64
      - arm64
#    targets: &build-targets
#      - darwin_amd64
#      - linux_amd64
#      - linux_arm64

# Use most recent tag and short commit for snapshot version.
snapshot:
  name_template: "{{ .Env.GIT_VERSION }}"

archives:
  - name_template: "flomesh_{{ .Version }}_{{ .Os }}_{{ .Arch }}"
    files:
      - none*
    format_overrides:
      - goos: windows
        format: zip
    replacements:
      darwin: Darwin
      linux: Linux
      windows: Windows
      amd64: x86_64

checksum:
  name_template: "checksums.txt"
  algorithm: sha256

signs:
  - artifacts: checksum
    signature: "${artifact}.asc"
    args: ["--batch", "-u", "{{ .Env.GPG_FINGERPRINT }}", "--output", "${signature}", "--detach-sign", "${artifact}"]

changelog:
  skip: false
  filters:
    exclude:
    - '^docs:'
    - '^test:'
    - Merge pull request
    - Merge branch
    - go mod tidy

release:
  prerelease: auto
  extra_files:
  - glob: ./artifacts/traffic-guru.yaml
  - glob: ./etc/cert-manager-v1.7.2.yaml

