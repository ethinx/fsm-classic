//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
 * MIT License
 *
 * Copyright (c) since 2021,  flomesh.io Authors.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/api/core/v1"
	"k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
<<<<<<<< HEAD:apis/namespacedingress/v1alpha1/zz_generated.deepcopy.go
func (in *HTTP) DeepCopyInto(out *HTTP) {
	*out = *in
	in.Port.DeepCopyInto(&out.Port)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTP.
func (in *HTTP) DeepCopy() *HTTP {
	if in == nil {
		return nil
	}
	out := new(HTTP)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespacedIngress) DeepCopyInto(out *NamespacedIngress) {
========
func (in *GlobalTrafficPolicy) DeepCopyInto(out *GlobalTrafficPolicy) {
>>>>>>>> release-v0.2:apis/globaltrafficpolicy/v1alpha1/zz_generated.deepcopy.go
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
}

<<<<<<<< HEAD:apis/namespacedingress/v1alpha1/zz_generated.deepcopy.go
// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespacedIngress.
func (in *NamespacedIngress) DeepCopy() *NamespacedIngress {
	if in == nil {
		return nil
	}
	out := new(NamespacedIngress)
========
// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalTrafficPolicy.
func (in *GlobalTrafficPolicy) DeepCopy() *GlobalTrafficPolicy {
	if in == nil {
		return nil
	}
	out := new(GlobalTrafficPolicy)
>>>>>>>> release-v0.2:apis/globaltrafficpolicy/v1alpha1/zz_generated.deepcopy.go
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
<<<<<<<< HEAD:apis/namespacedingress/v1alpha1/zz_generated.deepcopy.go
func (in *NamespacedIngress) DeepCopyObject() runtime.Object {
========
func (in *GlobalTrafficPolicy) DeepCopyObject() runtime.Object {
>>>>>>>> release-v0.2:apis/globaltrafficpolicy/v1alpha1/zz_generated.deepcopy.go
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
<<<<<<<< HEAD:apis/namespacedingress/v1alpha1/zz_generated.deepcopy.go
func (in *NamespacedIngressList) DeepCopyInto(out *NamespacedIngressList) {
========
func (in *GlobalTrafficPolicyList) DeepCopyInto(out *GlobalTrafficPolicyList) {
>>>>>>>> release-v0.2:apis/globaltrafficpolicy/v1alpha1/zz_generated.deepcopy.go
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
<<<<<<<< HEAD:apis/namespacedingress/v1alpha1/zz_generated.deepcopy.go
		*out = make([]NamespacedIngress, len(*in))
========
		*out = make([]GlobalTrafficPolicy, len(*in))
>>>>>>>> release-v0.2:apis/globaltrafficpolicy/v1alpha1/zz_generated.deepcopy.go
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

<<<<<<<< HEAD:apis/namespacedingress/v1alpha1/zz_generated.deepcopy.go
// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespacedIngressList.
func (in *NamespacedIngressList) DeepCopy() *NamespacedIngressList {
	if in == nil {
		return nil
	}
	out := new(NamespacedIngressList)
========
// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalTrafficPolicyList.
func (in *GlobalTrafficPolicyList) DeepCopy() *GlobalTrafficPolicyList {
	if in == nil {
		return nil
	}
	out := new(GlobalTrafficPolicyList)
>>>>>>>> release-v0.2:apis/globaltrafficpolicy/v1alpha1/zz_generated.deepcopy.go
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
<<<<<<<< HEAD:apis/namespacedingress/v1alpha1/zz_generated.deepcopy.go
func (in *NamespacedIngressList) DeepCopyObject() runtime.Object {
========
func (in *GlobalTrafficPolicyList) DeepCopyObject() runtime.Object {
>>>>>>>> release-v0.2:apis/globaltrafficpolicy/v1alpha1/zz_generated.deepcopy.go
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
<<<<<<<< HEAD:apis/namespacedingress/v1alpha1/zz_generated.deepcopy.go
func (in *NamespacedIngressSpec) DeepCopyInto(out *NamespacedIngressSpec) {
	*out = *in
	if in.ServiceAnnotations != nil {
		in, out := &in.ServiceAnnotations, &out.ServiceAnnotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.PodAnnotations != nil {
		in, out := &in.PodAnnotations, &out.PodAnnotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	in.HTTP.DeepCopyInto(&out.HTTP)
	in.TLS.DeepCopyInto(&out.TLS)
	if in.Env != nil {
		in, out := &in.Env, &out.Env
		*out = make([]v1.EnvVar, len(*in))
========
func (in *GlobalTrafficPolicySpec) DeepCopyInto(out *GlobalTrafficPolicySpec) {
	*out = *in
	if in.Targets != nil {
		in, out := &in.Targets, &out.Targets
		*out = make([]TrafficTarget, len(*in))
>>>>>>>> release-v0.2:apis/globaltrafficpolicy/v1alpha1/zz_generated.deepcopy.go
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
<<<<<<<< HEAD:apis/namespacedingress/v1alpha1/zz_generated.deepcopy.go
	in.Resources.DeepCopyInto(&out.Resources)
	if in.NodeSelector != nil {
		in, out := &in.NodeSelector, &out.NodeSelector
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Affinity != nil {
		in, out := &in.Affinity, &out.Affinity
		*out = new(v1.Affinity)
		(*in).DeepCopyInto(*out)
	}
	if in.Tolerations != nil {
		in, out := &in.Tolerations, &out.Tolerations
		*out = make([]v1.Toleration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Replicas != nil {
		in, out := &in.Replicas, &out.Replicas
		*out = new(int32)
========
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalTrafficPolicySpec.
func (in *GlobalTrafficPolicySpec) DeepCopy() *GlobalTrafficPolicySpec {
	if in == nil {
		return nil
	}
	out := new(GlobalTrafficPolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalTrafficPolicyStatus) DeepCopyInto(out *GlobalTrafficPolicyStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalTrafficPolicyStatus.
func (in *GlobalTrafficPolicyStatus) DeepCopy() *GlobalTrafficPolicyStatus {
	if in == nil {
		return nil
	}
	out := new(GlobalTrafficPolicyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrafficTarget) DeepCopyInto(out *TrafficTarget) {
	*out = *in
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(int)
>>>>>>>> release-v0.2:apis/globaltrafficpolicy/v1alpha1/zz_generated.deepcopy.go
		**out = **in
	}
}

<<<<<<<< HEAD:apis/namespacedingress/v1alpha1/zz_generated.deepcopy.go
// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespacedIngressSpec.
func (in *NamespacedIngressSpec) DeepCopy() *NamespacedIngressSpec {
	if in == nil {
		return nil
	}
	out := new(NamespacedIngressSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespacedIngressStatus) DeepCopyInto(out *NamespacedIngressStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespacedIngressStatus.
func (in *NamespacedIngressStatus) DeepCopy() *NamespacedIngressStatus {
	if in == nil {
		return nil
	}
	out := new(NamespacedIngressStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSLPassthrough) DeepCopyInto(out *SSLPassthrough) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSLPassthrough.
func (in *SSLPassthrough) DeepCopy() *SSLPassthrough {
	if in == nil {
		return nil
	}
	out := new(SSLPassthrough)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TLS) DeepCopyInto(out *TLS) {
	*out = *in
	in.Port.DeepCopyInto(&out.Port)
	out.SSLPassthrough = in.SSLPassthrough
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TLS.
func (in *TLS) DeepCopy() *TLS {
	if in == nil {
		return nil
	}
	out := new(TLS)
========
// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrafficTarget.
func (in *TrafficTarget) DeepCopy() *TrafficTarget {
	if in == nil {
		return nil
	}
	out := new(TrafficTarget)
>>>>>>>> release-v0.2:apis/globaltrafficpolicy/v1alpha1/zz_generated.deepcopy.go
	in.DeepCopyInto(out)
	return out
}
